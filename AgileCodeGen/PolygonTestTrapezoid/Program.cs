//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
// </auto-generated>
//------------------------------------------------------------------------------
namespace ExcelCodeGen
{
    using System;

    public sealed class TrapezoidPolygon
    {
        // Attributes (fields)
        private double m_ShortBase = 20.0;
        private double m_LongBase = 30.0;
        private double m_LeftLeg = 13.0;
        private double m_RightLeg = 13.0;

        // Attributes (properties)
        public double ShortBase { get { return this.m_ShortBase; } }
        public double LongBase { get { return this.m_LongBase; } }
        public double LeftLeg { get { return this.m_LeftLeg; } }
        public double RightLeg { get { return this.m_RightLeg; } }

        // Derived attributes (co-properties)
        public double MiddleLine { get { return (ShortBase + LongBase) / 2; } }
        public double RightSmallBase { get { return (Math.Pow(RightLeg, 2) - Math.Pow(LeftLeg, 2) + Math.Pow(LongBase, 2) + Math.Pow(ShortBase, 2) - 2 * ShortBase * LongBase) / (2 * (LongBase - ShortBase)); } }
        public double LeftSmallBase { get { return (Math.Pow(LeftLeg, 2) - Math.Pow(RightLeg, 2) + Math.Pow(LongBase, 2) + Math.Pow(ShortBase, 2) - 2 * ShortBase * LongBase) / (2 * (LongBase - ShortBase)); } }
        public double Height { get { return Math.Sqrt(Math.Pow(RightLeg, 2.0) - Math.Pow(RightSmallBase, 2.0)); } }
        public double LeftRadianAngle_LongBase { get { return Math.Round(Math.Asin(Height / LeftLeg), 4); } }
        public double RightRadianAngle_LongBase { get { return Math.Round(Math.Asin(Height / RightLeg), 4); } }
        public double LeftRadianAngle_ShortBase { get { return Math.Round(Math.PI / 2 + Math.Asin(Height / LeftLeg), 4); } }
        public double RightRadianAngle_ShortBase { get { return Math.Round(Math.PI / 2 + Math.Asin(Height / RightLeg), 4); } }
        public double LeftDegreeAngle_LongBase { get { return LeftRadianAngle_LongBase * 180 / Math.PI; } }
        public double RightDegreeAngle_LongBase { get { return RightRadianAngle_LongBase * 180 / Math.PI; } }
        public double LeftDegreeAngle_ShortBase { get { return LeftRadianAngle_ShortBase * 180 / Math.PI; } }
        public double RightDegreeAngle_ShortBase { get { return RightRadianAngle_ShortBase * 180 / Math.PI; } }

        // Main values
        public double Area { get { return MiddleLine * Height; } }
        public double Perimeter { get { return ShortBase + LongBase + LeftLeg + RightLeg; } }

        public override string ToString()
        {
            // Polygon main values
            var result = $"The Trapezoid object:\r\n   Area = {this.Area}\r\n   Perimeter = {this.Perimeter}";
            // Polygon main attributes
            result += "\r\n--------\r\n Main attributes:";
            result += $"\r\n   ShortBase = {this.ShortBase}";
            result += $"\r\n   LongBase = {this.LongBase}";
            result += $"\r\n   LeftLeg = {this.LeftLeg}";
            result += $"\r\n   RightLeg = {this.RightLeg}";
            // Polygon derived attributes
            result += "\r\n--------\r\n Derived attributes:";
            result += $"\r\n   MiddleLine = {this.MiddleLine}";
            result += $"\r\n   RightSmallBase = {this.RightSmallBase}";
            result += $"\r\n   LeftSmallBase = {this.LeftSmallBase}";
            result += $"\r\n   Height = {this.Height}";
            result += $"\r\n   LeftRadianAngle_LongBase = {this.LeftRadianAngle_LongBase}";
            result += $"\r\n   RightRadianAngle_LongBase = {this.RightRadianAngle_LongBase}";
            result += $"\r\n   LeftRadianAngle_ShortBase = {this.LeftRadianAngle_ShortBase}";
            result += $"\r\n   RightRadianAngle_ShortBase = {this.RightRadianAngle_ShortBase}";
            result += $"\r\n   LeftDegreeAngle_LongBase = {this.LeftDegreeAngle_LongBase}";
            result += $"\r\n   RightDegreeAngle_LongBase = {this.RightDegreeAngle_LongBase}";
            result += $"\r\n   LeftDegreeAngle_ShortBase = {this.LeftDegreeAngle_ShortBase}";
            result += $"\r\n   RightDegreeAngle_ShortBase = {this.RightDegreeAngle_ShortBase}";
            return result;
        }

        public static void Main()
        {
            var polygon = new TrapezoidPolygon();

            System.Console.WriteLine(polygon.ToString());
        }
    }
}
